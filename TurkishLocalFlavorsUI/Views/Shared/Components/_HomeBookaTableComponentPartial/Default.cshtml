@model CreateBookingDto

<section class="book_section layout_padding">
    <div class="container">
        <div class="heading_container">
            <h2>Rezervasyon Oluşturun</h2>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form_container">
                    <form method="post" id="bookingForm" onsubmit="submitBooking(event)">
                        <div>
                            <input type="text" class="form-control" id="nameSurname" placeholder="Adınız Soyadınız" asp-for="Name" />
                        </div>
                        <div>
                            <input type="text" class="form-control" id="phone" placeholder="Telefon Numaranız" asp-for="Phone" />
                        </div>
                        <div>
                            <input type="email" class="form-control" id="mail" placeholder="Mail Adresiniz" asp-for="Mail" />
                        </div>
                        <div>
                            <select id="countPeople" asp-for="PersonCount" class="form-control nice-select wide">
                                <option value="" disabled selected>Kaç Kişisiziniz?</option>
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                                <option value="6">6++</option>
                            </select>
                        </div>
                        <div>
                            <input type="date" class="form-control" id="dateTime" asp-for="Date">
                        </div>
                        <div class="btn_box">
                            <button type="submit">Yerinizi Ayırtın</button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="col-md-6">
                <div class="map_container">
                    <iframe src="https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d4012.9362025419346!2d29.006040189882242!3d41.10602130759506!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x14cab5ce49432ab3%3A0xbf3b742cbd64169c!2sUNIQ%20Hall!5e0!3m2!1str!2str!4v1726697582856!5m2!1str!2str" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById('bookingForm').addEventListener('submit', submitBooking);
    });

    let isSubmitting = false;

    function submitBooking(event) {
        event.preventDefault(); // Formun doğal gönderimini durdur

        if (isSubmitting) return; // Eğer zaten gönderim yapılıyorsa, fonksiyonu durdur

        isSubmitting = true; // Gönderim başladı

        // Form verilerini al
        var formData = {
            Name: document.getElementById('nameSurname').value,
            Phone: document.getElementById('phone').value,
            Mail: document.getElementById('mail').value,
            PersonCount: document.getElementById('countPeople').value,
            Date: document.getElementById('dateTime').value,
            Description: "Rezervasyon Alındı"
        };

        // Fetch API ile gönder
        fetch('https://localhost:7046/api/Booking/CreateBooking', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
            .then(response => {
                if (response.ok) {
                    return response.text(); // Metin olarak al
                }
                throw new Error('Network response was not ok.');
            })
            .then(data => {
                // Düz metni JSON nesnesine çevir
                const jsonResponse = { message: data };
                swal(jsonResponse.message, {
                    icon: "success",
                });
                setTimeout(() => location.reload(), 7000);
            })
            .catch(error => {
                swal("Bir hata oluştu: " + error.message, {
                    icon: "error",
                });
            })
            .finally(() => {
                isSubmitting = false; // Gönderim tamamlandı
            });
    }
</script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>